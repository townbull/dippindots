# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
    export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
    export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		RED=$(tput setaf 9)
		YELLOW=$(tput setaf 226)
		GREEN=$(tput setaf 10)
		BLUE=$(tput setaf 12)
		PURPLE=$(tput setaf 21)
		FORE=$(tput setaf 0)
	else
		RED=$(tput setaf 5)
		YELLOW=$(tput setaf 4)
		GREEN=$(tput setaf 2)
		BLUE=$(tput setaf 4)
		PURPLE=$(tput setaf 1)
		FORE=$(tput setaf 7)
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	RED="\033[1;31m"
	YELLOW="\033[1;33m"
	GREEN="\033[1;32m"
	BLUE="\033[1;34m;"
	PURPLE="\033[1;35m"
	FORE="\033[1;37m"
	BOLD=""
	RESET="\033[m"
fi

export RED
export YELLOW
export GREEN
export BLUE
export PURPLE
export FORE
export BOLD
export RESET

function parse_git_dirty() {
	[[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
}

function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}


# ref:
# \u = user
# \h = host
# \w = cwd (full path)
# \W = cwd (current dir only)
export PS1="\[${BOLD}${RED}\]\u \[$FORE\]at \[$BLUE\]\h \[$FORE\]in \[$GREEN\]\w\[$FORE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$YELLOW\]\$(parse_git_branch)\[$BLUE\] > \[$RESET\]"
export PS2="\[$YELLOW\]→ \[$RESET\]"